Crear una carpeta
Inicializar el Proyecto Con:
  - npm init
  
Instalar Express
  - npm install --save express
  
Instalar MySql
  - npm install --save mysql

Instalae Body Parser
  - npm install --save body-parser

Instalar Morgan sirve para ver errores http
  - npm install --save morgan

Instalar MyConnection MySql sirve para agilizar el codigo de conexion a la BD
 - npm i express-myconnection
  
Instalar Nodemon Para que el servidor se reactive 
  - npm install nodemon -D
  Para que funcione iremos a package.json y declararemos una variable
  y el archivo donde esta la conexion en la parte de "scripts":{
    "server": "nodemon index.js"
  }
  Para ejecutarlo en consola es con: npm run server -> nombre de variable

Instalar Motor de Plantillas 
  - npm install ejs

Utilizar Bootstrap y Bootswatch para cambiar de temas

Instalar Heroku CLI desde terminal
- brew tap heroku/brew && brew install heroku

Entrar al proyecto y crear la app en heroku
  - heroku create

Cambiar el nombre a la aplicacion
  - heroku apps:rename --app nombre_actual nombre_nuevo (todo en minusculas)
  
Crear addons para la base de datos en heroku BD solo postgresSql
  - heroku addons:create cleardb:ignite

Obtener el URL de Conexion a la BD Remota
  - heroku config | grep CLEARDB_DATABASE_URL
  mysql://b2f2205ee77308:b549501d@us-cdbr-east-02.cleardb.com/heroku_657ce0666ee7b9d?reconnect=true

Asignar url a Variable de configuracion de BD
  - heroku config:set DATABASE_URL= 'mysql://b2f2205ee77308:b549501d@us-cdbr-east-02.cleardb.com/heroku_657ce0666ee7b9d?reconnect=true'

Configurar la conexion a la BD
app.use(conexion(mysql, {
    host: 'us-cdbr-east-02.cleardb.com',
    user: 'b2f2205ee77308',
    password: 'b549501d',
    database: 'heroku_657ce0666ee7b9d'
}, 'single'));

Luego de eso creamos la conexion a la base de datos por medio de mysqlWorkbench y creamos las tablas
